/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProjectSubmission,
  ProjectSubmissionInterface,
} from "../../ProjectSubmission.sol/ProjectSubmission";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_memberContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_approver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "ProjectApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_submittor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProjectSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_votes",
        type: "uint256",
      },
    ],
    name: "VoteReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_submittor",
        type: "address",
      },
    ],
    name: "approveProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approvedProjects",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getApproved",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct ProjectSubmission.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPending",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct ProjectSubmission.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingProjects",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "projectSubmitted",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_votes",
        type: "uint256",
      },
    ],
    name: "projectVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "setMemberContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "submitProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161126f38038061126f83398101604081905261002f9161005e565b600180546001600160a01b039092166001600160a01b031992831681179091556000805490921617905561008c565b60006020828403121561006f578081fd5b81516001600160a01b0381168114610085578182fd5b9392505050565b6111d48061009b6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063a6b0ad5311610076578063bb1467f41161005b578063bb1467f414610177578063be2617521461018a578063d07b77b51461019d576100a3565b8063a6b0ad5314610151578063b4dcc89014610164576100a3565b806311ae9ed2146100a8578063316b13b4146100c65780638accfb731461011a5780638d2087631461013e575b600080fd5b6100b06101a5565b6040516100bd9190610ffe565b60405180910390f35b6101186100d4366004610e7a565b600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316811790915560018054909216179055565b005b61012d610128366004610e7a565b6102c9565b6040516100bd9594939291906110b6565b61011861014c366004610f92565b610384565b61011861015f366004610ec8565b61045a565b61012d610172366004610f7a565b61068b565b61012d610185366004610f7a565b6106be565b610118610198366004610e7a565b6106ce565b6100b0610a30565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156102c057838290600052602060002090600502016040518060a00160405290816000820180546101fc9061111c565b80601f01602080910402602001604051908101604052809291908181526020018280546102289061111c565b80156102755780601f1061024a57610100808354040283529160200191610275565b820191906000526020600020905b81548152906001019060200180831161025857829003601f168201915b5050509183525050600182810154602080840191909152600284015460ff161515604084015260038401546060840152600490930154608090920191909152918352920191016101c9565b50505050905090565b6002602052600090815260409020805481906102e49061111c565b80601f01602080910402602001604051908101604052809291908181526020018280546103109061111c565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b505050506001830154600284015460038501546004909501549394919360ff909116925085565b60045482106103da5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064015b60405180910390fd5b80600483815481106103fc57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600401600082825461041c91906110ed565b909155505060405181815233907f758ce7d2b09ac027fc94a1655219010aa7e53bbc780a4ff3161fa70fb2aa91519060200160405180910390a25050565b600081116104aa5760405162461bcd60e51b815260206004820152600a60248201527f496e76616c69642049440000000000000000000000000000000000000000000060448201526064016103d1565b336000908152600260205260409020600101541561050a5760405162461bcd60e51b815260206004820152601160248201527f416c7265616479207375626d697474656400000000000000000000000000000060448201526064016103d1565b61053e6040518060a00160405280606081526020016000815260200160001515815260200160008152602001600081525090565b828152602080820183905260045460608301523360009081526002825260409020825180518493610573928492910190610d27565b506020828101516001808401919091556040808501516002808601805492151560ff199093169290921790915560608601516003860155608090950151600494850155336000908152949092529083208254918201835591909252805490916005027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190819083906106059061111c565b610610929190610dab565b5060018281015490820155600280830154908201805460ff191660ff90921615159190911790556003808301549082015560049182015491015560405133907fe46ed95e70c240f01b29852d6d3ee1bcd6bf580907914f1290866ab8f37d9eb49061067e9086908690611094565b60405180910390a2505050565b6003818154811061069b57600080fd5b90600052602060002090600502016000915090508060000180546102e49061111c565b6004818154811061069b57600080fd5b6001600160a01b0381166000908152600260205260409020600101546107365760405162461bcd60e51b815260206004820152600a60248201527f4e6f2070726f6a6563740000000000000000000000000000000000000000000060448201526064016103d1565b6001600160a01b03811633141561078f5760405162461bcd60e51b815260206004820152601460248201527f43616e6e6f742073656c6620617070726f76656400000000000000000000000060448201526064016103d1565b6000546040517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b039091169063a230c52490602401602060405180830381600087803b1580156107ed57600080fd5b505af1158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190610ea8565b6108715760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420417070726f766572000000000000000000000000000000000000000060448201526064016103d1565b6001600160a01b03811660009081526002602081905260408220908101805460ff19166001908117909155600380548184018190559182018155909252805490916005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190819083906108e59061111c565b6108f0929190610dab565b5060018281015482820155600280840154818401805460ff191660ff90921615159190911790556003808501548185015560049485015494909301939093556001600160a01b0384166000908152602093909352604083209081015491810154815490919061095e9061111c565b80601f016020809104026020016040519081016040528092919081815260200182805461098a9061111c565b80156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b50505050509250336001600160a01b03167fbe7464bdd7ea18bea6987589bd0f9c4791cfb204f9bfbb029f27fe51483cfca88484604051610a19929190611094565b60405180910390a2610a2a81610b4b565b50505050565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156102c057838290600052602060002090600502016040518060a0016040529081600082018054610a879061111c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab39061111c565b8015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050509183525050600182810154602080840191909152600284015460ff16151560408401526003840154606084015260049093015460809092019190915291835292019101610a54565b6004548110610b9c5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016103d1565b805b600454610bad90600190611105565b811015610cbf576004610bc18260016110ed565b81548110610bdf57634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160048281548110610c0e57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016000820181600001908054610c309061111c565b610c3b929190610dab565b5060018281015490820155600280830154908201805460ff191660ff90921615159190911790556003808301549082015560049182015490820155805482919082908110610c9957634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015580610cb781611157565b915050610b9e565b506004805480610cdf57634e487b7160e01b600052603160045260246000fd5b60008281526020812060001990920191600583020190610cff8282610e26565b5060006001820181905560028201805460ff1916905560038201819055600490910155905550565b828054610d339061111c565b90600052602060002090601f016020900481019282610d555760008555610d9b565b82601f10610d6e57805160ff1916838001178555610d9b565b82800160010185558215610d9b579182015b82811115610d9b578251825591602001919060010190610d80565b50610da7929150610e65565b5090565b828054610db79061111c565b90600052602060002090601f016020900481019282610dd95760008555610d9b565b82601f10610dea5780548555610d9b565b82800160010185558215610d9b57600052602060002091601f016020900482015b82811115610d9b578254825591600101919060010190610e0b565b508054610e329061111c565b6000825580601f10610e445750610e62565b601f016020900490600052602060002090810190610e629190610e65565b50565b5b80821115610da75760008155600101610e66565b600060208284031215610e8b578081fd5b81356001600160a01b0381168114610ea1578182fd5b9392505050565b600060208284031215610eb9578081fd5b81518015158114610ea1578182fd5b60008060408385031215610eda578081fd5b823567ffffffffffffffff80821115610ef1578283fd5b818501915085601f830112610f04578283fd5b813581811115610f1657610f16611188565b604051601f8201601f19908116603f01168101908382118183101715610f3e57610f3e611188565b81604052828152886020848701011115610f56578586fd5b82602086016020830137918201602090810195909552509694909201359450505050565b600060208284031215610f8b578081fd5b5035919050565b60008060408385031215610fa4578182fd5b50508035926020909101359150565b60008151808452815b81811015610fd857602081850181015186830182015201610fbc565b81811115610fe95782602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561108657603f19898403018552815160a0815181865261104a82870182610fb3565b838b0151878c01528984015115158a88015260608085015190880152608093840151939096019290925250509386019390860190600101611024565b509098975050505050505050565b6000604082526110a76040830185610fb3565b90508260208301529392505050565b600060a082526110c960a0830188610fb3565b60208301969096525092151560408401526060830191909152608090910152919050565b6000821982111561110057611100611172565b500190565b60008282101561111757611117611172565b500390565b600181811c9082168061113057607f821691505b6020821081141561115157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561116b5761116b611172565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b1c859117547473322fe7f719fdea108a7ae78cdb73368365169e775d6b8f6c764736f6c63430008030033";

type ProjectSubmissionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectSubmissionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProjectSubmission__factory extends ContractFactory {
  constructor(...args: ProjectSubmissionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _memberContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_memberContract, overrides || {});
  }
  override deploy(
    _memberContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_memberContract, overrides || {}) as Promise<
      ProjectSubmission & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProjectSubmission__factory {
    return super.connect(runner) as ProjectSubmission__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectSubmissionInterface {
    return new Interface(_abi) as ProjectSubmissionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProjectSubmission {
    return new Contract(address, _abi, runner) as unknown as ProjectSubmission;
  }
}
